{"version":3,"file":"src/MadhuriPetService.js","mappings":";;;;;;;;;;;;;;;;AAAmC;AACnC,qBAAqB,6CAAQ;AACtB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mCAAmC,6EAA6E;AAChH;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;ACzCmC;AACnC,qBAAqB,6CAAQ;AACtB;AACP,iDAAiD,oDAAoD;AACrG;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,oCAAoC,sBAAsB;AAC1D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE,aAAa;AACb;AACA;AACA,6DAA6D,QAAQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mCAAmC,4DAA4D;AAC/F;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;ACvC6B;AACM;AACnC,qBAAqB,6CAAQ;AACtB;AACP;AACA;AACA,8BAA8B,IAAI,4CAAO,IAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA,+DAA+D,+CAA+C;AAC9G;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,oCAAoC,sBAAsB;AAC1D;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT,oCAAoC,yBAAyB;AAC7D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2BAA2B;AAClE,aAAa;AACb;AACA;AACA,0DAA0D,YAAY;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mCAAmC,oDAAoD;AACvF;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;ACvH6B;AACM;AACnC,qBAAqB,6CAAQ;AACtB;AACP;AACA;AACA,8BAA8B,IAAI,4CAAO,IAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;AC1BA,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;;;ACAxG;AAC5B,uCAAuC;;AAEvC;AACe;AACf;AACA,IAAI,4DAAqB;AACzB;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACXqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;AChCG;AACsB,CAAC;AAClD;AACA;AACA;;AAEA;;AAEA,eAAe;;;AAGf;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;;AAEA;AACA,wDAAwD,+CAAG;;AAE3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA,wEAAwE;AACxE;;AAEA,4EAA4E;;AAE5E,gEAAgE;;AAEhE;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,uBAAuB;;AAEvB,oCAAoC;;AAEpC,8BAA8B;;AAE9B,kCAAkC;;AAElC,4BAA4B;;AAE5B,kBAAkB,OAAO;AACzB;AACA;;AAEA,gBAAgB,8DAAe;AAC/B;;AAEA,iEAAe,EAAE;;;;;;;;;;;;;;;AC9Fc;;AAE/B;AACA,qCAAqC,iDAAK;AAC1C;;AAEA,iEAAe,QAAQ;;;;;;;;;;ACNvB;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AAC4F;AACvC;AACY;AACF;AACxD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAU;AACrC;AACA,2BAA2B,4EAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iEAAW;AACtC;AACA,2BAA2B,kEAAS;AACpC;AACA,2BAA2B,8EAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kEAAY;AACvC;AACA;AACA;AACA,mBAAmB,kEAAY;AAC/B;AACA;AACA","sources":["webpack:///../../../src/controllers/db-migrate.ts","webpack:///../../../src/controllers/get-expenditure.ts","webpack:///../../../src/controllers/records.ts","webpack:///../../../src/controllers/save-expenditure.ts","webpack:///../../uuid/dist/esm-node/regex.js","webpack:///../../uuid/dist/esm-node/rng.js","webpack:///../../uuid/dist/esm-node/stringify.js","webpack:///../../uuid/dist/esm-node/v1.js","webpack:///../../uuid/dist/esm-node/validate.js","webpack:///external commonjs \"aws-sdk\"","webpack:///external node-commonjs \"crypto\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../../../src/MadhuriPetService.ts"],"sourcesContent":["import { DynamoDB } from 'aws-sdk';\nconst dynamoDb = new DynamoDB.DocumentClient();\nexport function migrateDb(body, callback) {\n    const paramsFrom = {\n        TableName: \"madhuri-pet-clinic-service-prod\"\n    };\n    // fetch todo from the database\n    dynamoDb.scan(paramsFrom, (error, result) => {\n        var _a, _b;\n        // handle potential errors\n        if (error) {\n            console.error(error);\n            callback(null, {\n                statusCode: error.statusCode || 501,\n                body: JSON.stringify({ message: error.toString() })\n            });\n            return;\n        }\n        (_a = result.Items) === null || _a === void 0 ? void 0 : _a.forEach((item) => {\n            const params = {\n                TableName: process.env.DYNAMODB_RECORDS_TABLE,\n                Item: item\n            };\n            dynamoDb.put(params, (error, result) => {\n                // handle potential errors\n                if (error) {\n                    callback(new Error('Couldn\\'t create the todo item.'));\n                    return;\n                }\n            });\n        });\n        // create a response\n        const response = {\n            statusCode: 200,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify({ records: (_b = result.Items) === null || _b === void 0 ? void 0 : _b.length }),\n        };\n        callback(null, response);\n    });\n}\n","import { DynamoDB } from 'aws-sdk';\nconst dynamoDb = new DynamoDB.DocumentClient();\nexport function getExpenditure(queryParams, callback) {\n    const params = Object.assign(Object.assign({ TableName: process.env.DYNAMODB_EXPENDITURES_TABLE }, ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.id) && {\n        ExpressionAttributeValues: {\n            \":a\": queryParams.id\n        },\n        FilterExpression: \"id = :a\"\n    })), ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.from) && {\n        ExpressionAttributeValues: {\n            ':from': queryParams.from,\n            ':to': queryParams.to\n        },\n        ExpressionAttributeNames: { '#timestamp': 'date' },\n        FilterExpression: '(#timestamp BETWEEN :from AND :to)'\n    }));\n    // fetch todo from the database\n    dynamoDb.scan(params, (error, result) => {\n        // handle potential errors\n        if (error) {\n            console.error(error);\n            callback(null, {\n                statusCode: error.statusCode || 501,\n                body: JSON.stringify({ message: error.toString() })\n            });\n            return;\n        }\n        const totalExpenditure = result.Items.reduce((acc, { amount }) => acc + amount, 0);\n        const totalRecords = result.ScannedCount;\n        // create a response\n        const response = {\n            statusCode: 200,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify({ expenditures: result.Items, totalExpenditure, totalRecords }),\n        };\n        callback(null, response);\n    });\n}\n","import * as uuid from 'uuid';\nimport { DynamoDB } from 'aws-sdk';\nconst dynamoDb = new DynamoDB.DocumentClient();\nexport function saveRecords(body, callback) {\n    const params = {\n        TableName: process.env.DYNAMODB_RECORDS_TABLE,\n        Item: Object.assign({ id: uuid.v1() }, body)\n    };\n    // write the todo to the database\n    dynamoDb.put(params, (error, result) => {\n        // handle potential errors\n        if (error) {\n            callback(new Error('Couldn\\'t create the todo item.'));\n            return;\n        }\n        // create a response\n        const response = {\n            statusCode: 200,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify(params.Item)\n        };\n        callback(null, response);\n    });\n}\nexport function getRecords(queryParams, callback) {\n    console.log(process.env.DBENDPOINT);\n    const params = Object.assign(Object.assign(Object.assign({ TableName: process.env.DYNAMODB_RECORDS_TABLE }, ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.id) && {\n        ExpressionAttributeValues: {\n            \":a\": queryParams.id\n        },\n        FilterExpression: \"id = :a\"\n    })), ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.from) && {\n        ExpressionAttributeValues: {\n            ':from': queryParams.from,\n            ':to': queryParams.to\n        },\n        ExpressionAttributeNames: { '#timestamp': 'date' },\n        FilterExpression: '(#timestamp BETWEEN :from AND :to)'\n    })), ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.reference) && {\n        ExpressionAttributeValues: {\n            \":a\": queryParams.reference\n        },\n        ExpressionAttributeNames: { '#referBy': 'reference' },\n        FilterExpression: \"#referBy = :a\"\n    }));\n    // fetch todo from the database\n    dynamoDb.scan(params, (error, result) => {\n        // handle potential errors\n        if (error) {\n            console.error(error);\n            callback(null, {\n                statusCode: error.statusCode || 501,\n                body: JSON.stringify({ message: error.toString() })\n            });\n            return;\n        }\n        const totalEarnings = result.Items.reduce((acc, { paidAmount }) => acc + paidAmount, 0);\n        const totalRecords = result.ScannedCount;\n        // create a response\n        const response = {\n            statusCode: 200,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify({ records: result.Items, totalEarnings, totalRecords }),\n        };\n        callback(null, response);\n    });\n}\nexport function updateRecord(queryParams, body, callback) {\n    const params = {\n        TableName: process.env.DYNAMODB_RECORDS_TABLE,\n        Key: {\n            id: queryParams.id\n        },\n        UpdateExpression: `set paidAmount=:paidAmount, remainingAmount=:remainingAmount `,\n        ExpressionAttributeValues: {\n            \":paidAmount\": body.paidAmount,\n            \":remainingAmount\": body.remainingAmount\n        },\n        ReturnValues: \"ALL_NEW\",\n    };\n    dynamoDb.update(params, (error, result) => {\n        if (error) {\n            callback(new Error('Couldn\\'t update  the item.'));\n            return;\n        }\n        console.log('result', result);\n        const response = {\n            statusCode: 200,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n        };\n        callback(null, response);\n    });\n}\nexport function deleteRecord(queryParams, callback) {\n    const params = {\n        TableName: process.env.DYNAMODB_RECORDS_TABLE,\n        Key: {\n            id: queryParams.id\n        },\n    };\n    dynamoDb.delete(params, (error, result) => {\n        if (error) {\n            callback(new Error('Couldn\\'t delete the item.'));\n            return;\n        }\n        const response = {\n            statusCode: 200,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n        };\n        callback(null, response);\n    });\n}\n","import * as uuid from 'uuid';\nimport { DynamoDB } from 'aws-sdk';\nconst dynamoDb = new DynamoDB.DocumentClient();\nexport function saveExpenditure(body, callback) {\n    const params = {\n        TableName: process.env.DYNAMODB_EXPENDITURES_TABLE,\n        Item: Object.assign({ id: uuid.v1() }, body)\n    };\n    // write the todo to the database\n    dynamoDb.put(params, (error, result) => {\n        // handle potential errors\n        if (error) {\n            console.log(error);\n            callback(new Error('Couldn\\'t create the todo item.'));\n            return;\n        }\n        // create a response\n        const response = {\n            statusCode: 200,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify(params.Item)\n        };\n        callback(null, response);\n    });\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","module.exports = require(\"aws-sdk\");","module.exports = require(\"crypto\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// eslint-disable no-fallthrough \nimport { saveRecords, getRecords, updateRecord, deleteRecord } from \"./controllers/records\";\nimport { migrateDb } from \"./controllers/db-migrate\";\nimport { saveExpenditure } from './controllers/save-expenditure';\nimport { getExpenditure } from './controllers/get-expenditure';\nexport function routes(event, context, callback) {\n    const path = event.path;\n    console.log(path);\n    /* eslint-disable no-fallthrough */\n    switch (event.httpMethod) {\n        case \"GET\": {\n            switch (path) {\n                case \"/records\":\n                    return getRecords(event.queryStringParameters, callback);\n                case \"/expenditure\":\n                    return getExpenditure(event.queryStringParameters, callback);\n            }\n        }\n        case \"POST\": {\n            const body = JSON.parse(event.body);\n            switch (path) {\n                case \"/records\":\n                    return saveRecords(body, callback);\n                case \"/records/db-migrate\":\n                    return migrateDb(body, callback);\n                case \"/expenditure\":\n                    return saveExpenditure(body, callback);\n                // case \"/generate-pdf\":\n                //   return generatePDF(body, callback);\n            }\n        }\n        case \"PATCH\": {\n            const body = JSON.parse(event.body);\n            switch (path) {\n                case \"/record\":\n                    return updateRecord(event.queryStringParameters, body, callback);\n            }\n        }\n        case \"DELETE\": {\n            return deleteRecord(event.queryStringParameters, callback);\n        }\n    }\n}\n"],"names":[],"sourceRoot":""}